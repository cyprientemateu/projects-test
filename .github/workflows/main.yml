name: CI-CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: demo-project5/terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: demo-project5/terraform
      run: terraform apply -auto-approve

    - name: Get EC2 IP from Terraform output
      id: ec2_ip
      working-directory: demo-project5/terraform
      run: echo "::set-output name=ip::$(terraform output -raw public_ip)"

    - name: Wait for SSH to be available
      run: |
        until ssh -o StrictHostKeyChecking=no -i <(echo "$SSH_PRIVATE_KEY") ec2-user@${{ steps.ec2_ip.outputs.ip }} "echo ready"; do
          echo "Waiting for SSH..."
          sleep 5
        done

    - name: Setup Python for Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip sshpass
        pip3 install --user ansible

    - name: Run Ansible Playbook
      working-directory: demo-project5/ansible
      run: |
        ansible-playbook -i "${{ steps.ec2_ip.outputs.ip }}," -u ec2-user --private-key <(echo "$SSH_PRIVATE_KEY") playbook.yml